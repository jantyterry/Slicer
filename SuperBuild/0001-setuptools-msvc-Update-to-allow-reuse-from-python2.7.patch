From 3bd8e9a9a2db88aa1e34afbe9218d72c29cd34fb Mon Sep 17 00:00:00 2001
From: Jean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>
Date: Thu, 16 Mar 2017 03:21:59 -0400
Subject: [PATCH] setuptools/msvc: Update to allow reuse from python2.7
 msvc9compiler.py

---
 setuptools/msvc.py | 22 +++++++---------------
 1 file changed, 7 insertions(+), 15 deletions(-)

diff --git a/setuptools/msvc.py b/setuptools/msvc.py
index d41daec..d67a3de 100644
--- a/setuptools/msvc.py
+++ b/setuptools/msvc.py
@@ -20,14 +20,16 @@ import sys
 import platform
 import itertools
 import distutils.errors
-from packaging.version import LegacyVersion
+#from packaging.version import LegacyVersion
 
-from six.moves import filterfalse
+#from six.moves import filterfalse
+from itertools import ifilterfalse as filterfalse
 
-from .monkey import get_unpatched
+#from .monkey import get_unpatched
 
 if platform.system() == 'Windows':
-    from six.moves import winreg
+    #from six.moves import winreg
+    import _winreg as winreg
     safe_env = os.environ
 else:
     """
@@ -89,7 +91,7 @@ def msvc9_find_vcvarsall(version):
         if os.path.isfile(vcvarsall):
             return vcvarsall
 
-    return get_unpatched(msvc9_find_vcvarsall)(version)
+    return None
 
 
 def msvc9_query_vcvarsall(ver, arch='x86', *args, **kwargs):
@@ -120,16 +122,6 @@ def msvc9_query_vcvarsall(ver, arch='x86', *args, **kwargs):
     ------
     environment: dict
     """
-    # Try to get environement from vcvarsall.bat (Classical way)
-    try:
-        orig = get_unpatched(msvc9_query_vcvarsall)
-        return orig(ver, arch, *args, **kwargs)
-    except distutils.errors.DistutilsPlatformError:
-        # Pass error if Vcvarsall.bat is missing
-        pass
-    except ValueError:
-        # Pass error if environment not set after executing vcvarsall.bat
-        pass
 
     # If error, try to set environment directly
     try:
-- 
2.5.0

